<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <tx:annotation-driven/>

    <!-- Redis -->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    </bean>

    <!--  -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">

        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="${redis.timeout}"/>
        <property name="database" value="${redis.database.springSession}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
    </bean>


    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.host}"/>
        <constructor-arg name="port" value="${redis.port}" type="int"/>
        <constructor-arg name="timeout" value="${redis.timeout}" type="int"/>
        <constructor-arg name="password" value="${redis.password}"/>
    </bean>

    <!-- 配置自己的redis工具类  -->
    <bean id="jedisUtil" class="com.opslab.util.redis.JedisUtil">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>
    <!--     <bean id="jedisUtil" class="wac.utils.redis.JedisUtil">
            <property name="jedisPool" ref="jedisPool" />
        </bean> -->


    <!-- Session -->
    <bean id="redisHttpSessionConfiguration"
          class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="120"/>
    </bean>

    <!-- redis -->


    <!-- 分片模式 -->

    <!-- 配置redis共享连接池，业务层主要通过该bean访问redis服务器 -->
    <!--   <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
          <constructor-arg index="0" ref="jedisPoolConfig" />
          <constructor-arg index="1">
              <list>
                  <bean class="redis.clients.jedis.JedisShardInfo">
                      <constructor-arg index="0" value="${redis.uri.0}" />
                  </bean>
              </list>
          </constructor-arg>
      </bean> -->


    <!-- 纯粹的单机模式，一般都采用连接池+连接工厂（JedisConnectionFactory）的模式进行开发 -->
    <!-- <bean id="jedisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.password}" />
        <property name="timeout" value="${redis.timeout}" />
        <property name="database" value="${redis.database.springSession}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="usePool" value="true" />
    </bean> -->

    <!-- 	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
            <property name="connectionFactory" ref="jedisConnectionFactory" />
        </bean> -->

    <!-- <bean id="defaultCookieSerializer"
        class="org.springframework.session.web.http.DefaultCookieSerializer">
        <property name="cookieName" value="${UNIQUE_SIGN}_SESSION" />
    </bean> -->

    <!-- 将session放入redis -->
    <!-- <bean id="redisHttpSessionConfiguration"
        class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="18000" />
    </bean> -->
    <!-- 	<bean class="com.menu.login.action.OnLineListener" /> -->
    <!-- <bean class="com.tzsw.core.asset.TZHttpSessionListener" /> -->
</beans>